<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-06-06T22:31:13+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">RedmineプラグインをGitHub Actionsでテストする</title><link href="http://localhost:4000/2020/01/18/redminegithub-actions.html" rel="alternate" type="text/html" title="RedmineプラグインをGitHub Actionsでテストする" /><published>2020-01-18T17:22:00+09:00</published><updated>2020-01-18T17:22:00+09:00</updated><id>http://localhost:4000/2020/01/18/redminegithub-actions</id><content type="html" xml:base="http://localhost:4000/2020/01/18/redminegithub-actions.html"><![CDATA[<a href="https://qiita.com/two_pack/items/31d159b28663b57614c4" target="_blank">Redmine Advent Calendar 2019</a>の<a href="https://qiita.com/two_pack/items/31d159b28663b57614c4" target="_blank">Qiita</a>で書きました。追っかけで<a href="https://qiita.com/two_pack/items/665680e886889f1a2467" target="_blank">もう一つ</a>。<br />
Travis-CIで行っていたRedmineプラグインのCIを、GitHub Actionsに変更したものです。<br />
GitHub Actionsをやってみようというのが動機づけですが、結果的に実行も早かったのでよかったです。<br />
<br />
Qiitaで記事を投稿するのも初だったのですが、ここと棲み分けをどうしたものか・・・ととりあえずリンクしてみました。]]></content><author><name>ソフトウェア開発にまつわる話</name></author><category term="Redmine" /><category term="Redmine Plugin" /><summary type="html"><![CDATA[Redmine Advent Calendar 2019のQiitaで書きました。追っかけでもう一つ。 Travis-CIで行っていたRedmineプラグインのCIを、GitHub Actionsに変更したものです。 GitHub Actionsをやってみようというのが動機づけですが、結果的に実行も早かったのでよかったです。 Qiitaで記事を投稿するのも初だったのですが、ここと棲み分けをどうしたものか・・・ととりあえずリンクしてみました。]]></summary></entry><entry><title type="html">ユーザー登録時に姓名で自動的にグループを割り当てる（Redmine Auto Assign Group Plugin）</title><link href="http://localhost:4000/2018/12/09/redmine-auto-assign-group-plugin.html" rel="alternate" type="text/html" title="ユーザー登録時に姓名で自動的にグループを割り当てる（Redmine Auto Assign Group Plugin）" /><published>2018-12-09T22:07:00+09:00</published><updated>2018-12-09T22:07:00+09:00</updated><id>http://localhost:4000/2018/12/09/redmine-auto-assign-group-plugin</id><content type="html" xml:base="http://localhost:4000/2018/12/09/redmine-auto-assign-group-plugin.html"><![CDATA[<a href="https://adventar.org/calendars/3352">Redmine Advent Calendar 2018</a>の9日目に書こうと思っていたやつです。<br />
<br />
<a href="https://github.com/two-pack/redmine_auto_assign_group">Redmine Auto Assign Group Plugin</a>は、ユーザー登録時、自動的にグループを割り当てるプラグインです。<br />
１年ぐらい前に、<a href="/2017/10/28/redmine-auto-assign-group-plugin.html">ここ</a>に書いたような感じでRedmine.orgのフォーラムをきっかけに作ったものです。<br />
<br />
Redmine 4.0.0に向けて直した勢いで、姓名でも割り当てできるようにしました。<br />
メールアドレスと同じで、正規表現で設定を行います。<br />
他の条件とのAND条件で一致した場合にグループを割り当てます。<br />
画面はこんな感じ。<br />
<div class="separator" style="clear: both; text-align: left;">
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgnVXwB-6dbQwZ0DC7nc42IgWKtlCFjSCpnZdXYJkn6uqJ3zldsVmmRB3XTCIYFlboqqHW2bDxa3g0AUFCNeNkJYkQ_WOYGaybRyezO0nxtMFiTPmbc0KtONYMVkBDl0VpIpx24ezDB_k4/s1600/groups_rules_tab_input_rule.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" data-original-height="279" data-original-width="595" height="150" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgnVXwB-6dbQwZ0DC7nc42IgWKtlCFjSCpnZdXYJkn6uqJ3zldsVmmRB3XTCIYFlboqqHW2bDxa3g0AUFCNeNkJYkQ_WOYGaybRyezO0nxtMFiTPmbc0KtONYMVkBDl0VpIpx24ezDB_k4/s320/groups_rules_tab_input_rule.png" width="320" /></a></div>
<br />
<div class="separator" style="clear: both; text-align: left;">
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgVonbQhBQXFQRZOdVPdLLTKPIMk0SNkeNJqHvm1u7x956-K9PVsQuMownsHEKq5yxqtR0NyNbQMjbuLDesmoBWF1vfdYtG7c4hx_L53la7GKQmT5TM2Q7SO5D-FbPUwOLIIilmXtBvHX4/s1600/groups_rules_tab_rule_exist.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" data-original-height="195" data-original-width="646" height="96" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgVonbQhBQXFQRZOdVPdLLTKPIMk0SNkeNJqHvm1u7x956-K9PVsQuMownsHEKq5yxqtR0NyNbQMjbuLDesmoBWF1vfdYtG7c4hx_L53la7GKQmT5TM2Q7SO5D-FbPUwOLIIilmXtBvHX4/s320/groups_rules_tab_rule_exist.png" width="320" /></a></div>
<br />
前回リリース時点から、姓名に部署などを入れて運用するケースがあるため、メール以外もできるといいという話は上がっていました。<br />
ただ、自分自身がこのプラグインどころか、グループ自体を使っていないので、なかなか手がつきませんでした。自分で使うの大事ですね。<br />
<br />
やるか！と勢いをつけた当初は、そろそろRedmine 4.0.0がでるんじゃね！？<br />
と界隈が盛り上がっていた頃で、リリースに合わせてプラグインもリリースするなら、一緒にやるか、と思いたちました。<br />
本家のリリースは、やっぱり気分が上がりますよね！<br />
<br />
月日は流れて、、、、<br />
<ul>
<li><a href="https://www.redmine.org/projects/redmine/repository/revisions/17698">4.0.0のStable branch</a>のできたし！</li>
<li>Advent Calendarも書かないとだし。。。</li>
</ul>
という感じで、4.0.0を待たずにリリースってことにしました。<br />
リリース楽しみにして年末を過ごしたいと思いますw<br />
<span style="font-size: xx-small;">＃書いてる時点でリリースしてないですけどね。。。</span><br />
<br />
と書いてアドベントカレンダー用にあっためて置いたら、12/9にRedmine 4.0.0がリリースされました！！！！！<br />
1日早くリリースしてしまいましたが、リリースされた状態のRedmine 4.0.0でも無事に動いています。<br />
<span style="font-size: xx-small;">#アドベントカレンダーの方は<a href="/2018/12/09/redmine-400.html" target="_blank">別の</a>に変えてしまった。。。</span><br />
<br />
<br />]]></content><author><name>ソフトウェア開発にまつわる話</name></author><summary type="html"><![CDATA[Redmine Advent Calendar 2018の9日目に書こうと思っていたやつです。 Redmine Auto Assign Group Pluginは、ユーザー登録時、自動的にグループを割り当てるプラグインです。 １年ぐらい前に、ここに書いたような感じでRedmine.orgのフォーラムをきっかけに作ったものです。 Redmine 4.0.0に向けて直した勢いで、姓名でも割り当てできるようにしました。 メールアドレスと同じで、正規表現で設定を行います。 他の条件とのAND条件で一致した場合にグループを割り当てます。 画面はこんな感じ。 前回リリース時点から、姓名に部署などを入れて運用するケースがあるため、メール以外もできるといいという話は上がっていました。 ただ、自分自身がこのプラグインどころか、グループ自体を使っていないので、なかなか手がつきませんでした。自分で使うの大事ですね。 やるか！と勢いをつけた当初は、そろそろRedmine 4.0.0がでるんじゃね！？ と界隈が盛り上がっていた頃で、リリースに合わせてプラグインもリリースするなら、一緒にやるか、と思いたちました。 本家のリリースは、やっぱり気分が上がりますよね！ 月日は流れて、、、、 4.0.0のStable branchのできたし！ Advent Calendarも書かないとだし。。。 という感じで、4.0.0を待たずにリリースってことにしました。 リリース楽しみにして年末を過ごしたいと思いますw ＃書いてる時点でリリースしてないですけどね。。。 と書いてアドベントカレンダー用にあっためて置いたら、12/9にRedmine 4.0.0がリリースされました！！！！！ 1日早くリリースしてしまいましたが、リリースされた状態のRedmine 4.0.0でも無事に動いています。 #アドベントカレンダーの方は別のに変えてしまった。。。]]></summary></entry><entry><title type="html">祝 Redmine 4.0.0リリース！</title><link href="http://localhost:4000/2018/12/09/redmine-400.html" rel="alternate" type="text/html" title="祝 Redmine 4.0.0リリース！" /><published>2018-12-09T21:52:00+09:00</published><updated>2018-12-09T21:52:00+09:00</updated><id>http://localhost:4000/2018/12/09/redmine-400</id><content type="html" xml:base="http://localhost:4000/2018/12/09/redmine-400.html"><![CDATA[<a href="https://adventar.org/calendars/3352">Redmine Advent Calendar 2018</a>の9日目です！<br />
<br />
ついに<a href="http://www.redmine.org/projects/redmine/wiki/Download" target="_blank">今日、Redmine 4.0.0がリリース</a>されました！<br />
JPLはじめ、コミッタの皆様、コミュニティの皆様、ありがとうございました！<br />
<br />
で、プラグインのことを書こうかと思いましたが、急遽変更で<a href="http://www.redmine.org/news/119" target="_blank">Redmine.orgのニュースに投稿された、JPLのリリース通知</a><span id="goog_593095874"></span><a href="https://www.blogger.com/"></a><span id="goog_593095875"></span>を翻訳したいと思います。<br />
ざっくりな感じですので、誤訳などあればご指摘を。。。<br />
<h3>
<span style="font-size: small;">----------------</span><br />
<span style="font-size: large;">Redmine 4.0.0, 3.4.7, 3.3.9 リリース</span></h3>
昨年、Redmineにコントリビュートしてくれた多くの方に感謝します。Redmine 4.0.0のリリースを報告できて嬉しく思います。Redmine 4.0.0では、200を超える変更が行われました。<br />
<ul>
<li>メール通知での大きな変更： これまで1つのメールですべてのユーザーへ通知していましたが、それぞれのユーザー宛てになりました。</li>
<li>テキストの書式に関する多くの改善</li>
<li><a href="http://coderay.rubychan.de/" target="_blank">Coderay</a>から<a href="http://rouge.jneen.net/" target="_blank">Rouge</a>への変更により、コードハイライトで多くの言語をサポート</li>
</ul>
メールの配信は、現在Rails ActiveJobを使用しています。デフォルトでは非同期で送信されます。しかし、デフォルトではプロダクション環境には適していないインメモリキューが使用されるため、ActiveJobの永続的なバックエンドを設定することを検討する必要があります。<br />
<a href="https://guides.rubyonrails.org/v5.2/active_job_basics.html#job-execution" target="_blank">https://guides.rubyonrails.org/v5.2/active_job_basics.html#job-execution</a><br />
<br />
Redmine 4.0.0は、先日リリースされた最新のRails 5.2.2を使用しています。<br />
<br />
Redmine 3.4.7と3.3.9は、3.4.x、3.3.xのユーザー向けメンテナンスリリースです。詳細はチェンジログを参照してください。それぞれ、2つのRailsの脆弱性が修正されたRails 4.2.11への更新も含んでいます。それらの脆弱性はRedmine3.xには影響しないですが、可能であれば更新すべきです。<br />
----------------<br />
<br />
ついでに、拙作＆メンテのプラグインの4.0.0対応状況は以下の通りです。<br />
<ul>
<li><a href="https://github.com/two-pack/redmine_xlsx_format_issue_exporter" target="_blank">Redmine XLSX format issue exporter</a><br />
Githubのmasterは4.0.0で動作しますが、4.0.0の最後の最後で直ったCSVエクスポートのバグと同じものがあるため対応中。。。</li>
<li><a href="https://github.com/two-pack/redmine_auto_assign_group" target="_blank">Redmine Auto Assign Group Plugin</a><br />
v0.1.1で対応済み</li>
<li><a href="https://github.com/two-pack/redmine_xls_export" target="_blank">Redmine XLS Export plugin</a><br />
v0.2.1.t11で対応済み</li>
</ul>]]></content><author><name>ソフトウェア開発にまつわる話</name></author><category term="Redmine" /><summary type="html"><![CDATA[Redmine Advent Calendar 2018の9日目です！ ついに今日、Redmine 4.0.0がリリースされました！ JPLはじめ、コミッタの皆様、コミュニティの皆様、ありがとうございました！ で、プラグインのことを書こうかと思いましたが、急遽変更でRedmine.orgのニュースに投稿された、JPLのリリース通知を翻訳したいと思います。 ざっくりな感じですので、誤訳などあればご指摘を。。。 ---------------- Redmine 4.0.0, 3.4.7, 3.3.9 リリース 昨年、Redmineにコントリビュートしてくれた多くの方に感謝します。Redmine 4.0.0のリリースを報告できて嬉しく思います。Redmine 4.0.0では、200を超える変更が行われました。 メール通知での大きな変更： これまで1つのメールですべてのユーザーへ通知していましたが、それぞれのユーザー宛てになりました。 テキストの書式に関する多くの改善 CoderayからRougeへの変更により、コードハイライトで多くの言語をサポート メールの配信は、現在Rails ActiveJobを使用しています。デフォルトでは非同期で送信されます。しかし、デフォルトではプロダクション環境には適していないインメモリキューが使用されるため、ActiveJobの永続的なバックエンドを設定することを検討する必要があります。 https://guides.rubyonrails.org/v5.2/active_job_basics.html#job-execution Redmine 4.0.0は、先日リリースされた最新のRails 5.2.2を使用しています。 Redmine 3.4.7と3.3.9は、3.4.x、3.3.xのユーザー向けメンテナンスリリースです。詳細はチェンジログを参照してください。それぞれ、2つのRailsの脆弱性が修正されたRails 4.2.11への更新も含んでいます。それらの脆弱性はRedmine3.xには影響しないですが、可能であれば更新すべきです。 ---------------- ついでに、拙作＆メンテのプラグインの4.0.0対応状況は以下の通りです。 Redmine XLSX format issue exporter Githubのmasterは4.0.0で動作しますが、4.0.0の最後の最後で直ったCSVエクスポートのバグと同じものがあるため対応中。。。 Redmine Auto Assign Group Plugin v0.1.1で対応済み Redmine XLS Export plugin v0.2.1.t11で対応済み]]></summary></entry><entry><title type="html">Redmineのリポジトリから特定ソースの修正をGoogle Apps Scriptでメールする</title><link href="http://localhost:4000/2018/10/17/redminegoogle-apps-script.html" rel="alternate" type="text/html" title="Redmineのリポジトリから特定ソースの修正をGoogle Apps Scriptでメールする" /><published>2018-10-17T23:03:00+09:00</published><updated>2018-10-17T23:03:00+09:00</updated><id>http://localhost:4000/2018/10/17/redminegoogle-apps-script</id><content type="html" xml:base="http://localhost:4000/2018/10/17/redminegoogle-apps-script.html"><![CDATA[Redmineのプラグインを作成していると、関連する本体側の修正に影響を受けることがあります。<br />
また、私の作っている<a href="https://github.com/two-pack/redmine_xlsx_format_issue_exporter">Redmine XLSX format issue exporter</a>は、RedmineのCSVエクスポート機能と同等を目指しているので、変更に追随するようにしています。<br />
<br />
Redmine本体へのコミットは、<a href="https://toot.redmine.jp/">Mastodon</a>や<a href="https://discordapp.com/invite/tHgdVSj">Discord</a>のBOTで確認できますが、流してみる感じになるので見逃してしまいがちです。<br />
CIで失敗する場合はいいのですが、スルーしてなんか動きがおかしくなったり、<a href="https://github.com/two-pack/redmine_xlsx_format_issue_exporter/issues/63">本体側のバグ修正をプラグイン側にも反映すべき場合があったり</a>が続いたので、対策を考えて見ました、の結果です。<br />
<br />
今回はGoogle Apps Scriptを使って見ました。<a href="https://script.google.com/">Google Apps Script</a>を使うと、cron的なトリガーでスクリプトを動かすことができます。<br />
設定画面はこんな感じ。<br />
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3PujfkyZo3vV58DW4c7eRMFBQSqGDJFwxDZEWBmtdiTDKGjnkGNz53MOKoXfcYS78bSjjC1HR3vzClR4gLzAKlOe-HdoWXk-bp9p3kUCFE6nTQD8rivJXumsrRvyKIV6ahFT-e_G7OXc/s1600/trigger.png" imageanchor="1"><img border="0" data-original-height="136" data-original-width="802" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3PujfkyZo3vV58DW4c7eRMFBQSqGDJFwxDZEWBmtdiTDKGjnkGNz53MOKoXfcYS78bSjjC1HR3vzClR4gLzAKlOe-HdoWXk-bp9p3kUCFE6nTQD8rivJXumsrRvyKIV6ahFT-e_G7OXc/s1600/trigger.png" /></a><br />
<br />
作成したスクリプトは、<a href="http://www.redmine.org/projects/redmine/repository">redmine.orgのリポジトリページ</a>へアクセスして、今日のコミットがあればメールするというものです。<br />
以下のような感じ。targetsにURLを追加していけば、複数のソースをチェックできます。<br />
<script src="https://gist.github.com/two-pack/2c4164bd5f9eb492c35814ca94a0734b.js"></script><br />
<br />
これでちょっとは見逃しが少なくなるといいんですが。。。]]></content><author><name>ソフトウェア開発にまつわる話</name></author><category term="Google Apps Script" /><category term="Redmine" /><summary type="html"><![CDATA[Redmineのプラグインを作成していると、関連する本体側の修正に影響を受けることがあります。 また、私の作っているRedmine XLSX format issue exporterは、RedmineのCSVエクスポート機能と同等を目指しているので、変更に追随するようにしています。 Redmine本体へのコミットは、MastodonやDiscordのBOTで確認できますが、流してみる感じになるので見逃してしまいがちです。 CIで失敗する場合はいいのですが、スルーしてなんか動きがおかしくなったり、本体側のバグ修正をプラグイン側にも反映すべき場合があったりが続いたので、対策を考えて見ました、の結果です。 今回はGoogle Apps Scriptを使って見ました。Google Apps Scriptを使うと、cron的なトリガーでスクリプトを動かすことができます。 設定画面はこんな感じ。 作成したスクリプトは、redmine.orgのリポジトリページへアクセスして、今日のコミットがあればメールするというものです。 以下のような感じ。targetsにURLを追加していけば、複数のソースをチェックできます。 これでちょっとは見逃しが少なくなるといいんですが。。。]]></summary></entry><entry><title type="html">Redmineのチケットに表示されるSVNのコミット情報に対象ブランチを表示する</title><link href="http://localhost:4000/2018/07/22/redminesvn.html" rel="alternate" type="text/html" title="Redmineのチケットに表示されるSVNのコミット情報に対象ブランチを表示する" /><published>2018-07-22T17:50:00+09:00</published><updated>2018-07-22T17:50:00+09:00</updated><id>http://localhost:4000/2018/07/22/redminesvn</id><content type="html" xml:base="http://localhost:4000/2018/07/22/redminesvn.html"><![CDATA[Redmineのチケットとリポジトリを関連付けすると、そのチケットに該当のコミットが表示されます。<br />
<br />
<div class="separator" style="clear: both; text-align: left;">
<img border="0" data-original-height="201" data-original-width="478" height="168" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjnWhQ-PdjNwKAyYbcE_zYe3DT_FUKlAvVwKywmVShvSEa0BLZJdzjEWyscHggZcfg0XuwPzAj39hMd9haIVPXc92cqZqdR1kE5TlsRzodmQ5tgZ9fWvHOFW2TpoKwGuAY52l9GwZUe1qA/s400/revisions1.png" width="400" /></div>
<div class="separator" style="clear: both; text-align: left;">
ここには、どのブランチへのコミットなのかの情報がありません。</div>
これを解決しようと以下のプラグインが存在します。<br />
<a href="http://www.redmine.org/plugins/redmine_revision_branches">Git Revision Branches</a><br />
<br />
名前からGit専用と見せかけて、実はMercurialにも対応していました。<br />
でも、私が欲しいのは<b>Subversion</b>！！！！！<br />
<br />
というわけで、以下のプルリクエストを作成しました。<br />
<a href="https://github.com/tleish/redmine_revision_branches/pull/21">Subversion support.</a><br />
<br />
これを入れるとSubversionでも以下のように表示されます。<br />
Redmineはプロジェクトに複数のリポジトリが設定できるため、そのリポジトリ名と後ろにブランチが表示されます。<br />
<div class="separator" style="clear: both; text-align: left;">
<img border="0" data-original-height="396" data-original-width="477" height="331" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhitd5_efMrcZso1rx35phFRtAfx__lHX0VEC8Wb5iIVu5YP4sWzn5IUHjtXcz-AV6xKsOoCoILglzc79NhHvvq9SgcRkFWg4lljJI5nA4moFO3ck-sbsdKjg4-CHzOkIiANiq4laCIoqo/s400/revisions2.png" width="400" /></div>
<div class="separator" style="clear: both; text-align: left;">
<br /></div>
認識できるリポジトリは、Subversionの標準的な構成（trunk, branches, tags）を想定しています。<br />
ただ、Redmine本家のリポジトリからして、<a href="http://www.redmine.org/projects/redmine/repository/show/sandbox">sandbox</a>というのがあるので、さすがにRedmineのプラグインだしなと思って、それも認識できるようにしました。<br />
trunk以外はその１階層下まで表示する仕組みにしています。<br />
<br />
また、一つのリポジトリに複数のプロジェクトを突っ込んでいるような構成も見かけます。<br />
各プロジェクトの中に、さらにtrunkやbranchesなどがある、例えば、<br />
http://example.com/svn/projectA<br />
　/trunk<br />
　/branches<br />
　/tags<br />
http://example.com/svn/projectX<br />
　/trunk<br />
　/branches<br />
　/tags<br />
みたいな感じのとき、Redmineのプロジェクト、もしくはリポジトリの設定が分かれていて、リポジトリの設定には、<br />
http://example.com/svn/projectX<br />
と指定すると思われます。<br />
こういった場合にprojectX部分は邪魔なので、それを省く設定を入れました。<br />
複数リポジトリを設定する場合を想定して、カンマ区切りで複数指定できるようにしました。<br />
<div class="separator" style="clear: both; text-align: left;">
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgtifBsUgwUZcB2nKXLhlmG9_Dn0mKiup9rHBZINu7Wq19O53tmdjn1frdC-gM-CJAnBelbfnhJIDTQcXFOzj-HUzHU-4d11vMKKlStuXyL9Vd-ldkiWPeGdcyrDfDOkBcg6pEyjO2hShg/s1600/settings.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" data-original-height="286" data-original-width="1043" height="172" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgtifBsUgwUZcB2nKXLhlmG9_Dn0mKiup9rHBZINu7Wq19O53tmdjn1frdC-gM-CJAnBelbfnhJIDTQcXFOzj-HUzHU-4d11vMKKlStuXyL9Vd-ldkiWPeGdcyrDfDOkBcg6pEyjO2hShg/s640/settings.png" width="640" /></a></div>
<div class="separator" style="clear: both; text-align: center;">
<br /></div>
<div class="separator" style="clear: both; text-align: left;">
とりあえずこれで自分としては用が足りるとこまでいったかなという感じ。</div>
<br />
<br />
<br />]]></content><author><name>ソフトウェア開発にまつわる話</name></author><category term="Redmine" /><category term="Redmine Plugin" /><category term="Subversion" /><summary type="html"><![CDATA[Redmineのチケットとリポジトリを関連付けすると、そのチケットに該当のコミットが表示されます。 ここには、どのブランチへのコミットなのかの情報がありません。 これを解決しようと以下のプラグインが存在します。 Git Revision Branches 名前からGit専用と見せかけて、実はMercurialにも対応していました。 でも、私が欲しいのはSubversion！！！！！ というわけで、以下のプルリクエストを作成しました。 Subversion support. これを入れるとSubversionでも以下のように表示されます。 Redmineはプロジェクトに複数のリポジトリが設定できるため、そのリポジトリ名と後ろにブランチが表示されます。 認識できるリポジトリは、Subversionの標準的な構成（trunk, branches, tags）を想定しています。 ただ、Redmine本家のリポジトリからして、sandboxというのがあるので、さすがにRedmineのプラグインだしなと思って、それも認識できるようにしました。 trunk以外はその１階層下まで表示する仕組みにしています。 また、一つのリポジトリに複数のプロジェクトを突っ込んでいるような構成も見かけます。 各プロジェクトの中に、さらにtrunkやbranchesなどがある、例えば、 http://example.com/svn/projectA 　/trunk 　/branches 　/tags http://example.com/svn/projectX 　/trunk 　/branches 　/tags みたいな感じのとき、Redmineのプロジェクト、もしくはリポジトリの設定が分かれていて、リポジトリの設定には、 http://example.com/svn/projectX と指定すると思われます。 こういった場合にprojectX部分は邪魔なので、それを省く設定を入れました。 複数リポジトリを設定する場合を想定して、カンマ区切りで複数指定できるようにしました。 とりあえずこれで自分としては用が足りるとこまでいったかなという感じ。]]></summary></entry><entry><title type="html">【テスト設計】VSTePのファーストステップ 〜 新潟出張版 〜 に参加してきました</title><link href="http://localhost:4000/2018/04/22/vstep.html" rel="alternate" type="text/html" title="【テスト設計】VSTePのファーストステップ 〜 新潟出張版 〜 に参加してきました" /><published>2018-04-22T21:10:00+09:00</published><updated>2018-04-22T21:10:00+09:00</updated><id>http://localhost:4000/2018/04/22/vstep</id><content type="html" xml:base="http://localhost:4000/2018/04/22/vstep.html"><![CDATA[<a href="http://www.jasst.jp/symposium/jasst18niigata.html">JaSST'18 Niigata</a>の翌日に行われた、<br />
<a href="https://swanii.connpass.com/event/78903/">【テスト設計】VSTePのファーストステップ 〜 新潟出張版 〜</a><br />
に参加してきました。<br />
JaSST'17 Tokyo のセッション「VSTePのファーストステップ 〜 JaSST'16東北出張おかわり会 〜」にて講演された、 JaSST東北実行委員のお二方を講師に迎えて行われました。<br />
お二方、主催すわにいの<a href="https://twitter.com/kasacchiful">@kasacchiful</a>さん、お疲れ様でした＆ありがとうございました！<br />
<br />
内容はワークが中心で、ワークに当たって必要なVSTePのことを、はじめに座学でというものでした。座学は大きく、テスト観点図とテストコンテナについてでした。<br />
具体的な図などは、<a href="https://swanii.connpass.com/event/78903/">connpass</a>に記載のある参考してもらえればと思います。<br />
<br />
<div>
テスト観点図</div>
<ul>
<li>テスト観点は「テストの意図」。</li>
<li><b>チームで納得のいく</b>観点、観点のまとめを行う。</li>
<li>チームで話し合う中での<b>「違和感」を大事</b>にする。<br />
あのとき、なんかひっかかってたんだよな〜、というところでバグが出て後悔しないようにする。</li>
<li>仕様書に書かれていることがすべてではない。</li>
<li>チームの経験なども含めて観点を出していく。</li>
<li>トップダウン、ボトムアップ、ズームイン、ズームアウトを繰り返し考えてみる。</li>
<li>図にしたら、左右、上下の粒度を見ていく。<br />
粒度があっていない箇所から抜け漏れが見えてくることが多い。</li>
</ul>
<div>
テストコンテナ</div>
<div>
<ul>
<li>テストを実施することを考えた、観点のグルーピングを行う。</li>
<li>左から右へ、時系列にコンテナを並べる。<br />
縦方向は並列に行えるもの。<br />
テストの前後関係、実施順序、同時にできることなどが見える。</li>
<li><b>チームとしてしっくりくる、納得できる括りにすることが大事</b>。</li>
</ul>
</div>
<div>
ワーク</div>
<div>
<ul>
<li>+Lhacaの解凍機能について、テスト観点図、テストコンテナを作成するワーク。</li>
<li>今回は６人のチーム。</li>
<li>それぞれで仕様書をざっとみる。</li>
<li><b>仕様書は見ない</b>ようにして観点をみんなで付箋に書き出していった。<br />
仕様書を見ないことで、<b>仕様書に書いていないこと</b>が出やすくなる。</li>
<li>手を止めずにどんどん進めていくのが重要。</li>
<li>出した付箋をツリー構造に整理していく。<br />
整理する中で新しい観点がでてきたり、構造を変えるために加えたりと、いろいろ話しながら進めました。</li>
<li>観点に出ていくる「言葉」を<b>共通の理解で捉えているか</b>、を確認するのも重要。<br />
チームで同じものを見ていることが重要。バックボーンの違いから、ここがなかなか合わなかった感じがしましたが、擦り合わせて行けたかな。<br />
知っている人たちのチームだからこその思い込みもありそうだな、と思いました。</li>
<li>テスト観点図ができたら、テストコンテナを作成していく。</li>
<li>これをやってからでないと、これができない。<br />
これをしてからこれをすべき、といったところからまとめていった。</li>
<li>実際にテストを行うことをイメージしながら進めると、順序や並列でできるかなどが考えやすいと感じた。</li>
<li>機能が追加された場合などの影響範囲なども、関連する観点から属しているコンテナを抽出することで絞り込みやすい。</li>
</ul>
<div>
<br /></div>
</div>
VSTePを用いると、チームで納得したテスト観点図、テストコンテナができるので、振り返りを通した改善が行いやすくなるとの話でした。<br />
実際のワークを通して、顕在化したバグがどこで漏れていたのか、というあたりが明確になりそうだということ、それがチームの中での共通のものさしで語れそうだということを感じました。<br />
<br />
普段は一人でマインドマップで観点を出していくことが多いため、まずはワークでやったようなことを取りいれながら、徐々に周りを巻き込んで行けたらなあ、とか思いました。<br />
<br />]]></content><author><name>ソフトウェア開発にまつわる話</name></author><category term="VSTeP" /><category term="テスト設計" /><summary type="html"><![CDATA[JaSST'18 Niigataの翌日に行われた、 【テスト設計】VSTePのファーストステップ 〜 新潟出張版 〜 に参加してきました。 JaSST'17 Tokyo のセッション「VSTePのファーストステップ 〜 JaSST'16東北出張おかわり会 〜」にて講演された、 JaSST東北実行委員のお二方を講師に迎えて行われました。 お二方、主催すわにいの@kasacchifulさん、お疲れ様でした＆ありがとうございました！ 内容はワークが中心で、ワークに当たって必要なVSTePのことを、はじめに座学でというものでした。座学は大きく、テスト観点図とテストコンテナについてでした。 具体的な図などは、connpassに記載のある参考してもらえればと思います。 テスト観点図 テスト観点は「テストの意図」。 チームで納得のいく観点、観点のまとめを行う。 チームで話し合う中での「違和感」を大事にする。 あのとき、なんかひっかかってたんだよな〜、というところでバグが出て後悔しないようにする。 仕様書に書かれていることがすべてではない。 チームの経験なども含めて観点を出していく。 トップダウン、ボトムアップ、ズームイン、ズームアウトを繰り返し考えてみる。 図にしたら、左右、上下の粒度を見ていく。 粒度があっていない箇所から抜け漏れが見えてくることが多い。 テストコンテナ テストを実施することを考えた、観点のグルーピングを行う。 左から右へ、時系列にコンテナを並べる。 縦方向は並列に行えるもの。 テストの前後関係、実施順序、同時にできることなどが見える。 チームとしてしっくりくる、納得できる括りにすることが大事。 ワーク +Lhacaの解凍機能について、テスト観点図、テストコンテナを作成するワーク。 今回は６人のチーム。 それぞれで仕様書をざっとみる。 仕様書は見ないようにして観点をみんなで付箋に書き出していった。 仕様書を見ないことで、仕様書に書いていないことが出やすくなる。 手を止めずにどんどん進めていくのが重要。 出した付箋をツリー構造に整理していく。 整理する中で新しい観点がでてきたり、構造を変えるために加えたりと、いろいろ話しながら進めました。 観点に出ていくる「言葉」を共通の理解で捉えているか、を確認するのも重要。 チームで同じものを見ていることが重要。バックボーンの違いから、ここがなかなか合わなかった感じがしましたが、擦り合わせて行けたかな。 知っている人たちのチームだからこその思い込みもありそうだな、と思いました。 テスト観点図ができたら、テストコンテナを作成していく。 これをやってからでないと、これができない。 これをしてからこれをすべき、といったところからまとめていった。 実際にテストを行うことをイメージしながら進めると、順序や並列でできるかなどが考えやすいと感じた。 機能が追加された場合などの影響範囲なども、関連する観点から属しているコンテナを抽出することで絞り込みやすい。 VSTePを用いると、チームで納得したテスト観点図、テストコンテナができるので、振り返りを通した改善が行いやすくなるとの話でした。 実際のワークを通して、顕在化したバグがどこで漏れていたのか、というあたりが明確になりそうだということ、それがチームの中での共通のものさしで語れそうだということを感じました。 普段は一人でマインドマップで観点を出していくことが多いため、まずはワークでやったようなことを取りいれながら、徐々に周りを巻き込んで行けたらなあ、とか思いました。]]></summary></entry><entry><title type="html">[Redmine Advent Calendar 2017 1日目] shields.ioでredmine.orgのプラグインレイティングのバッヂを表示する</title><link href="http://localhost:4000/2017/12/01/redmine-advent-calendar-2017-1.html" rel="alternate" type="text/html" title="[Redmine Advent Calendar 2017 1日目] shields.ioでredmine.orgのプラグインレイティングのバッヂを表示する" /><published>2017-12-01T12:26:00+09:00</published><updated>2017-12-01T12:26:00+09:00</updated><id>http://localhost:4000/2017/12/01/redmine-advent-calendar-2017-1</id><content type="html" xml:base="http://localhost:4000/2017/12/01/redmine-advent-calendar-2017-1.html"><![CDATA[<a href="https://qiita.com/advent-calendar/2017/redmine" target="_blank">Redmine Advent Calendar 2017</a>の1日目です！<br />
<br />
<a href="https://www.redmine.org/">Redmineのオフィシャルサイトであるredmine.org</a>には、開発されているプラグインを確認できる<a href="https://www.redmine.org/plugins">Plugins Directory</a>があります。<br />
<img border="0" data-original-height="297" data-original-width="1335" height="140" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiZO4pmMfQb2Izdh9-mZHz4ixinLqSjbdMKjd4LNfSthHI1VFiLfJUHx-_9bKwAFQWdePioxuURDT17GKLCJKcUEHRiLP0l2jtgbWyfg-armWfKM-XVuwgaGgFZLqjPCiRIBFY7nkvPwik/s640/redmineorg-pluginsdictionary.png" width="640" /><br />
<div class="separator" style="clear: both; text-align: left;">
Plugins Directoryにプラグインを登録しておくと、Redmine上から最新バージョンのチェックも行えます（管理画面のCheck for updatesから行えます）。</div>
<div class="separator" style="clear: both; text-align: left;">
</div>
<div class="separator" style="clear: both; text-align: left;">
<img border="0" data-original-height="216" data-original-width="1031" height="134" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg8MY_0lOX8lMNjZ4yeKIY7anlZAERUmTlrK9FOM4sv5U0e2nj1Ncvo5DrLCbHSefVGyGkYSCAX47eynbXdQf0gOZzRvYOVidw508bahNsUIEsZgroXb4o_kGReoMAfKHWRcKRHRzyHDhc/s640/admin-plugins.png" width="640" /></div>
<br />
<br />
<div class="separator" style="clear: both; text-align: center;">
<a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgfnxFHMCu-i061bj-pHGlqeK96Df7xq06CEj_3sGjpY492D9DUEO3dkJD51EWv_nR52VzGcweSU__5CCXeIxeDsVbwAAKF8CmJTmZijFYe_DyJPxLbX1mHmp9ce0Q-nU8qMzbW29LwQy8/s1600/admin-plugins.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><br />
</a></div>
しかし、ソースコードは別のリポジトリに登録してある状態になります。<br />
例えばGitHubにソースを登録しておいた場合、READMEやWiki、Issuesなど、そこだけで足りてしまうのが実際のところです。<br />
検索してGitHubに飛んだら、Plugins Directoryを見ることがない場合も多いと思います。<br />
<br />
そこで何か誘導するものがあれば、Plugins Directoryで他のプラグインに巡り会う機械にもつながるな、ということで、Plugins Directoryのレイティングをバッヂとして表示する仕組みを考えました。<br />
バッヂからPlugins Directoryへリンクしてレイティングしてもらう、というモチベーションでプラグイン開発者の方にも入れてもらいやすいかなと考えています。<br />
<br />
<a href="https://shields.io/">shields.io</a>というサービスが、いろいろなサービスのバッヂを提供しています。<br />
これにredmine.orgのプラグインレイティングが載れば、プラグイン開発者の方がみんなで使えるな、ということで<a href="https://github.com/badges/shields/pull/1247">プルリクエストを出したところ、入れてもらえました</a>。<br />
<br />
以下は<a href="https://github.com/two-pack/redmine_xlsx_format_issue_exporter">Redmine XLSX format issue exporter</a>の GitHubにバッヂを入れた例です。<br />
星がでるパターンですが、数字で出すパターンもあります。<br />
<div class="separator" style="clear: both; text-align: center;">
</div>
<div class="separator" style="clear: both; text-align: left;">
<img border="0" data-original-height="328" data-original-width="661" height="197" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjyCbecfXXHduzzPR5jJZROSdlrD40DchWmYRUF2xtvXcKNJQWshgSgXIr8T-gv0E5M5KwLH_hQmu8PwfQarH3O_py5lOQ-fqMhT7WV0J8PRVW-RMAp3MAyS9TYL4S0NCA3_2uRPXqeKZU/s400/pluginrating.png" width="400" /></div>
<br />
READMEには、Markdownで以下のように記載してPlugins Directoryへリンクしています。<br />
<pre>[![Stars](https://img.shields.io/redmine/plugin/stars/redmine_xlsx_format_issue_exporter.svg)](https://www.redmine.org/plugins/redmine_xlsx_format_issue_exporter)
</pre>
SVGのファイル名部分は、プラグインのPlugins DirectoryでのURL末端になります。<br />
<br />
<br />
２日目は<a href="https://qiita.com/y503Unavailable">y503Unavailableさん</a>です！<br />
<br />]]></content><author><name>ソフトウェア開発にまつわる話</name></author><category term="shield.io" /><category term="Redmine" /><category term="Redmine Plugin" /><summary type="html"><![CDATA[Redmine Advent Calendar 2017の1日目です！ Redmineのオフィシャルサイトであるredmine.orgには、開発されているプラグインを確認できるPlugins Directoryがあります。 Plugins Directoryにプラグインを登録しておくと、Redmine上から最新バージョンのチェックも行えます（管理画面のCheck for updatesから行えます）。 しかし、ソースコードは別のリポジトリに登録してある状態になります。 例えばGitHubにソースを登録しておいた場合、READMEやWiki、Issuesなど、そこだけで足りてしまうのが実際のところです。 検索してGitHubに飛んだら、Plugins Directoryを見ることがない場合も多いと思います。 そこで何か誘導するものがあれば、Plugins Directoryで他のプラグインに巡り会う機械にもつながるな、ということで、Plugins Directoryのレイティングをバッヂとして表示する仕組みを考えました。 バッヂからPlugins Directoryへリンクしてレイティングしてもらう、というモチベーションでプラグイン開発者の方にも入れてもらいやすいかなと考えています。 shields.ioというサービスが、いろいろなサービスのバッヂを提供しています。 これにredmine.orgのプラグインレイティングが載れば、プラグイン開発者の方がみんなで使えるな、ということでプルリクエストを出したところ、入れてもらえました。 以下はRedmine XLSX format issue exporterの GitHubにバッヂを入れた例です。 星がでるパターンですが、数字で出すパターンもあります。 READMEには、Markdownで以下のように記載してPlugins Directoryへリンクしています。 [![Stars](https://img.shields.io/redmine/plugin/stars/redmine_xlsx_format_issue_exporter.svg)](https://www.redmine.org/plugins/redmine_xlsx_format_issue_exporter) SVGのファイル名部分は、プラグインのPlugins DirectoryでのURL末端になります。 ２日目はy503Unavailableさんです！]]></summary></entry><entry><title type="html">Redmine Auto Assign Group Pluginを作りました！</title><link href="http://localhost:4000/2017/10/28/redmine-auto-assign-group-plugin.html" rel="alternate" type="text/html" title="Redmine Auto Assign Group Pluginを作りました！" /><published>2017-10-28T16:28:00+09:00</published><updated>2017-10-28T16:28:00+09:00</updated><id>http://localhost:4000/2017/10/28/redmine-auto-assign-group-plugin</id><content type="html" xml:base="http://localhost:4000/2017/10/28/redmine-auto-assign-group-plugin.html"><![CDATA[<a href="https://github.com/two-pack/redmine_auto_assign_group" target="_blank">Redmine Auto Assign Group Plugin</a>を作りました！<br />
<div class="separator" style="clear: both; text-align: left;">
<a href="https://4.bp.blogspot.com/-uiH0uJDC9nw/WfQwX33S_ZI/AAAAAAAAhzo/E_VzMQICC0g992U8zLQlizZYMNGKgoatACLcBGAs/s1600/groups_rules_tab_input_rule.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" data-original-height="197" data-original-width="598" height="105" src="https://4.bp.blogspot.com/-uiH0uJDC9nw/WfQwX33S_ZI/AAAAAAAAhzo/E_VzMQICC0g992U8zLQlizZYMNGKgoatACLcBGAs/s320/groups_rules_tab_input_rule.png" width="320" /></a></div>
<br />
<a href="https://twitter.com/akipii" target="_blank">@akipii</a>さんが既に<a href="http://forza.cocolog-nifty.com/blog/2017/10/redmine_auto_as.html" target="_blank">ブログで取り上げてくださっています</a>。ありがたや！<br />
<span style="font-size: xx-small;">で、ブログ書いてないと気づいた。。。</span><br />
<h3>
きっかけ</h3>
<a href="http://redmine.org/">redmine.org</a>のフォーラムに以下の投稿がありました。<br />
<a href="http://www.redmine.org/boards/3/topics/52985" target="_blank">Plugin to automatically assign new users to groups?</a><br />
<br />
ユーザーの登録時に自動的にグループを設定したいという要求は、結構昔からあったようです。<br />
上の投稿から<a href="http://www.redmine.org/boards/2/topics/30039" target="_blank">参照されているスレッド</a>は2012/04に開始されています。<br />
パッチやプラグインの書き込みがありますが、条件によって別のグループを設定したい、というのが今回の投稿でした。<br />
<br />
ユースケースとして挙げられていた、グループごとでアクセス権限を行なうような運用は、規模が大きかったり複数の組織が絡むようなときに、手間が大幅に削減できそうな感じがしました。<br />
他にも思いつかないようなシーンが隠れてそうだなあとも思い、なんか既にありそうな感じ・・・と思ったんでググってもないから、面白そうだし作るか！ということにしました。<br />
<h3>
使い方</h3>
GitHubに<a href="https://github.com/two-pack/redmine_auto_assign_group" target="_blank">インストール方法</a>と<a href="https://github.com/two-pack/redmine_auto_assign_group/wiki/Usage" target="_blank">簡単な使い方</a>を書きました。<br />
グループの設定画面から、グループごとに正規表現でルールを設定できます。<br />
ユーザーが追加された際に、ルールに合致するとそのグループに追加されます。<br />
<h3>
今後の方向性</h3>
とりあえず、正規表現のチェック機能が必要と思っています。<br />
あとは、グループ横断でのルール一覧もあるといいかな、と思ったり、いらないんじゃないかな、と思ったり。<br />
作ったばかりなので、フィードバックを頂いたら考えていこうかなあと思います。<br />
<br />]]></content><author><name>ソフトウェア開発にまつわる話</name></author><category term="Redmine" /><category term="Redmine Plugin" /><summary type="html"><![CDATA[Redmine Auto Assign Group Pluginを作りました！ @akipiiさんが既にブログで取り上げてくださっています。ありがたや！ で、ブログ書いてないと気づいた。。。 きっかけ redmine.orgのフォーラムに以下の投稿がありました。 Plugin to automatically assign new users to groups? ユーザーの登録時に自動的にグループを設定したいという要求は、結構昔からあったようです。 上の投稿から参照されているスレッドは2012/04に開始されています。 パッチやプラグインの書き込みがありますが、条件によって別のグループを設定したい、というのが今回の投稿でした。 ユースケースとして挙げられていた、グループごとでアクセス権限を行なうような運用は、規模が大きかったり複数の組織が絡むようなときに、手間が大幅に削減できそうな感じがしました。 他にも思いつかないようなシーンが隠れてそうだなあとも思い、なんか既にありそうな感じ・・・と思ったんでググってもないから、面白そうだし作るか！ということにしました。 使い方 GitHubにインストール方法と簡単な使い方を書きました。 グループの設定画面から、グループごとに正規表現でルールを設定できます。 ユーザーが追加された際に、ルールに合致するとそのグループに追加されます。 今後の方向性 とりあえず、正規表現のチェック機能が必要と思っています。 あとは、グループ横断でのルール一覧もあるといいかな、と思ったり、いらないんじゃないかな、と思ったり。 作ったばかりなので、フィードバックを頂いたら考えていこうかなあと思います。]]></summary></entry><entry><title type="html">RedmineプラグインでMroongaを使うときのテスト</title><link href="http://localhost:4000/2017/09/12/redminemroonga.html" rel="alternate" type="text/html" title="RedmineプラグインでMroongaを使うときのテスト" /><published>2017-09-12T07:35:00+09:00</published><updated>2017-09-12T07:35:00+09:00</updated><id>http://localhost:4000/2017/09/12/redminemroonga</id><content type="html" xml:base="http://localhost:4000/2017/09/12/redminemroonga.html"><![CDATA[<a href="https://github.com/okkez/redmine_full_text_search">Full text search plugin</a>と<a href="https://github.com/two-pack/redmine_xlsx_format_issue_exporter">Redmine XLSX format issue exporter</a>が競合した話。<br />
パッチのロード順でチケットが表示（issues#show）できなった。<br />
パッチを提示してもらい、パッチを適用する位置を変更して対処した。<br />
https://github.com/two-pack/redmine_xlsx_format_issue_exporter/issues/50<br />
<br />
ここからが本題。<br />
いつも開発環境はsqlite3でやっているが、Full text search pluginがMroongaを使用するので、<a href="https://redmine.tokyo/projects/unofficialcooking">Unofficial Redmine CookingのRedmine AnsiblePlaybook Unofficial Cooking Edition（闇鍋版）</a>を使用した。<br />
すると、<b>rake redmine:plugins:test</b>でRedmine XLSX format issue exporterのテストを実行すると以下のようなエラーが出た。<br />
<pre>Mysql2::Error: The used table type doesn't support FULLTEXT indexes: CREATE fulltext INDEX `index_issue_contents_on_contents` 
</pre><br />
調べて見るとdb/schema.rbにテーブル作成時のオプション指定が入らないことが原因。<br />
プラグインでは以下のようなmigrateが書かれている。<br />
<pre class="brush:bash;">create_table :issue_contents, options: "ENGINE=Mroonga" do |t|
            t.integer :project_id
            t.integer :issue_id, unique: true, null: false
            t.string :subject
            t.text :contents, limit: 16.megabytes
            t.integer :status_id
            t.boolean :is_private
          end
</pre>対してschema.rbは以下のような感じ。<br />
<pre class="brush:bash;">create_table "issue_contents", force: :cascade do |t|
    t.integer "project_id", limit: 4
    t.integer "issue_id",   limit: 4,          null: false
    t.string  "subject",    limit: 255
    t.text    "contents",   limit: 4294967295
    t.integer "status_id",  limit: 4
    t.boolean "is_private"
  end

  add_index "issue_contents", ["contents"], name: "index_issue_contents_on_contee
nts", type: :fulltext
</pre><br />
rakeでテストを実行するの際に、db:test:prepareで一度テーブルが削除されてから、schema.rbを元に作成し直す。<br />
その際に、schema.rbにはENGINEがMroongaではなくInnoDBになってしまうので、FULLTEXTのインデックスが作れない。<br />
<br />
結局、db/tasks/redmine.rakeを書き換えた上で、db:drop -&gt; db:create -&gt; db:migrate -&gt; redmine:plugins:test の順で実行した。<br />
config/application.rbで<b>config.active_record.schema_format = :sql</b>とするとSQLに書きだされるため大丈夫というのも検索しているとあったが、db/structure.sqlにplugin分が書き込まれてないため、rake taskではテーブルがないとエラーになってだめだった。<br />
<br />]]></content><author><name>ソフトウェア開発にまつわる話</name></author><category term="Redmine" /><summary type="html"><![CDATA[Full text search pluginとRedmine XLSX format issue exporterが競合した話。 パッチのロード順でチケットが表示（issues#show）できなった。 パッチを提示してもらい、パッチを適用する位置を変更して対処した。 https://github.com/two-pack/redmine_xlsx_format_issue_exporter/issues/50 ここからが本題。 いつも開発環境はsqlite3でやっているが、Full text search pluginがMroongaを使用するので、Unofficial Redmine CookingのRedmine AnsiblePlaybook Unofficial Cooking Edition（闇鍋版）を使用した。 すると、rake redmine:plugins:testでRedmine XLSX format issue exporterのテストを実行すると以下のようなエラーが出た。 Mysql2::Error: The used table type doesn't support FULLTEXT indexes: CREATE fulltext INDEX `index_issue_contents_on_contents` 調べて見るとdb/schema.rbにテーブル作成時のオプション指定が入らないことが原因。 プラグインでは以下のようなmigrateが書かれている。 create_table :issue_contents, options: "ENGINE=Mroonga" do |t| t.integer :project_id t.integer :issue_id, unique: true, null: false t.string :subject t.text :contents, limit: 16.megabytes t.integer :status_id t.boolean :is_private end 対してschema.rbは以下のような感じ。 create_table "issue_contents", force: :cascade do |t| t.integer "project_id", limit: 4 t.integer "issue_id", limit: 4, null: false t.string "subject", limit: 255 t.text "contents", limit: 4294967295 t.integer "status_id", limit: 4 t.boolean "is_private" end]]></summary></entry><entry><title type="html">長岡IT開発者勉強会(NDS) 第52回勉強会に参加してきました #nds52</title><link href="http://localhost:4000/2017/06/18/itnds-52-nds52.html" rel="alternate" type="text/html" title="長岡IT開発者勉強会(NDS) 第52回勉強会に参加してきました #nds52" /><published>2017-06-18T23:04:00+09:00</published><updated>2017-06-18T23:04:00+09:00</updated><id>http://localhost:4000/2017/06/18/itnds-52-nds52</id><content type="html" xml:base="http://localhost:4000/2017/06/18/itnds-52-nds52.html"><![CDATA[長岡IT開発者勉強会(NDS) 第52回勉強会に参加してきました。<br />
<a href="http://nagaoka.techtalk.jp/no52">http://nagaoka.techtalk.jp/no52</a><br />
Togetterでまとめてくださっています。<br />
<a href="https://togetter.com/li/1120966">https://togetter.com/li/1120966</a><br />
<br />
今回のテーマは「初心者むけ」でした。<br />
初心者とは・・・という哲学的な内容で非常に勉強になりましたw<br />
メモを見ながら雑感です。へえと思ってばかりで何年やっても初心者だな、俺。。。<br />
<br />
<h2>「はじめてのC#プログラミング」 ailightさん</h2><ul><li>歴史的なあれ。N88BASIC、Quick C、Etc.... とても懐かしかった。</li>
<li>caseのbreak漏れでコンパイルエラーとか、へえと思った。<br />
機械、規約がうまく問題を解決してくれるのはうれしい。</li>
<li>「分岐が複雑の始まりであることを理解する」、「ループは前処理と後処理がセットでループ」とか、その通りだなと思いつつ、普段から意識できているかというと怪しいと思った。。。</li>
</ul><br />
<h2>「なんてかんたんなJavaEE」 civicさん</h2><ul><li>Full Profile / Web Profile / Micro Profile<br />
薄いという選択肢があるのはいい。</li>
</ul><br />
<h2>「文字コードとプログラミング（仮）」 gonchan93さん</h2><ul><li>「UNICODEを使え」、もうこれだね！w</li>
<li>JavaのStringがメモリ節約の方向にという話は、へえと思った。<br />
この辺の話。http://openjdk.java.net/jeps/254</li>
</ul><br />
<h2>「Netcatを使おう」  hayajoさん</h2><ul><li>telnetみたいなのか、と思ったらそれどころではなかった。すごいコマンドがあるもんだ！</li>
</ul><br />
<h2>「怖くないし役に立つ設計原則の話」  neko_gata_sさん</h2><ul><li>DRY原則おじさん。いるわー、おれだわー、こぴぺするなーいってるわーorz</li>
<li>「設計原則同士は関連している」というところに集約されていると思った。おまけのデザパタも含めて。話を聞くとうんうん、と思うけど、こうやって筋立てて話をできることや反例の出せることは、本当にすごいと思う。</li>
<li>硬い、柔らかい、のあたりが、理屈はわかっても初心者には判断が難しいところだと思う。</li>
<li>DRYにしないと！と言って見たり、こういう時は重複してもさ、とかいうことは確かにあるが、腑に落ちるように説明するのが難しいところ。</li>
</ul><br />
<h2>「はじめてのソフトウェアテスト（仮）」 kasacchifulさん</h2><ul><li>工程や「バグ」など用語を揃えておくのは本当に大事。</li>
<li>「テストが上手くなると設計が上手くなる」は、実感としてそう思う。<br />
違う視点、観点が入るというところなんだろうけど、そもそも作るべきもの、品質を捉え直すタイミング、意識ができるからかなと思う。</li>
</ul><br />
<h2>「今日から使えるCSSパターン」 Watanabeさん</h2><ul><li>Adobe Museで生成されるCSSは笑ったw</li>
<li>OOCSS、BEM（Block Element Modifier）は初めて聞いた。</li>
<li>全体を貫く「設計方針」が必要という話も含めて、実践的なアプローチをされていて、すごいと思った。</li>
</ul><br />
<h2>「はじめての修羅場」 hiro_ishibashiさん</h2><ul><li>すごく良い話だった。</li>
<li>発表にあったようなことを意識もしないようなPMも山ほどいる。メンバーは辛みしかない。</li>
<li>なにもマジな修羅場でなくても、修羅場予備軍でのカイゼンポイントばかりだと思った。</li>
<li>「犯人にまかせた、放置したマネジメント層の問題」。これ。本当にこれ。</li>
</ul><br />
<h2>「フリーランスの始め方(初心者向け)」 nemuzukaさん</h2><ul><li>税金とか普段は意識しないから、へえと思った。</li>
</ul><br />
<h2>「「新人研修の作り方」のその後」 masaru_b_clさん</h2><ul><li>どんどん改善されていくことがすばらしい。</li>
<li>継続していることもすばらしい。</li>
<li>外部に公開していることも本当にすばらしい！</li>
</ul><br />
<h2>「インターネットの契約から開通まで」  kam1nchuさん</h2><ul><li>ネット引くのって、すげーことなんだなと思った。<br />
こんなことかんがえたことなかったw</li>
<li>ひかり電話も使ってあげて欲しいと思ったw</li>
</ul><br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />]]></content><author><name>ソフトウェア開発にまつわる話</name></author><category term="nds" /><summary type="html"><![CDATA[長岡IT開発者勉強会(NDS) 第52回勉強会に参加してきました。 http://nagaoka.techtalk.jp/no52 Togetterでまとめてくださっています。 https://togetter.com/li/1120966 今回のテーマは「初心者むけ」でした。 初心者とは・・・という哲学的な内容で非常に勉強になりましたw メモを見ながら雑感です。へえと思ってばかりで何年やっても初心者だな、俺。。。 「はじめてのC#プログラミング」 ailightさん歴史的なあれ。N88BASIC、Quick C、Etc.... とても懐かしかった。 caseのbreak漏れでコンパイルエラーとか、へえと思った。 機械、規約がうまく問題を解決してくれるのはうれしい。 「分岐が複雑の始まりであることを理解する」、「ループは前処理と後処理がセットでループ」とか、その通りだなと思いつつ、普段から意識できているかというと怪しいと思った。。。 「なんてかんたんなJavaEE」 civicさんFull Profile / Web Profile / Micro Profile 薄いという選択肢があるのはいい。 「文字コードとプログラミング（仮）」 gonchan93さん「UNICODEを使え」、もうこれだね！w JavaのStringがメモリ節約の方向にという話は、へえと思った。 この辺の話。http://openjdk.java.net/jeps/254 「Netcatを使おう」 hayajoさんtelnetみたいなのか、と思ったらそれどころではなかった。すごいコマンドがあるもんだ！ 「怖くないし役に立つ設計原則の話」 neko_gata_sさんDRY原則おじさん。いるわー、おれだわー、こぴぺするなーいってるわーorz 「設計原則同士は関連している」というところに集約されていると思った。おまけのデザパタも含めて。話を聞くとうんうん、と思うけど、こうやって筋立てて話をできることや反例の出せることは、本当にすごいと思う。 硬い、柔らかい、のあたりが、理屈はわかっても初心者には判断が難しいところだと思う。 DRYにしないと！と言って見たり、こういう時は重複してもさ、とかいうことは確かにあるが、腑に落ちるように説明するのが難しいところ。 「はじめてのソフトウェアテスト（仮）」 kasacchifulさん工程や「バグ」など用語を揃えておくのは本当に大事。 「テストが上手くなると設計が上手くなる」は、実感としてそう思う。 違う視点、観点が入るというところなんだろうけど、そもそも作るべきもの、品質を捉え直すタイミング、意識ができるからかなと思う。 「今日から使えるCSSパターン」 WatanabeさんAdobe Museで生成されるCSSは笑ったw OOCSS、BEM（Block Element Modifier）は初めて聞いた。 全体を貫く「設計方針」が必要という話も含めて、実践的なアプローチをされていて、すごいと思った。 「はじめての修羅場」 hiro_ishibashiさんすごく良い話だった。 発表にあったようなことを意識もしないようなPMも山ほどいる。メンバーは辛みしかない。 なにもマジな修羅場でなくても、修羅場予備軍でのカイゼンポイントばかりだと思った。 「犯人にまかせた、放置したマネジメント層の問題」。これ。本当にこれ。 「フリーランスの始め方(初心者向け)」 nemuzukaさん税金とか普段は意識しないから、へえと思った。 「「新人研修の作り方」のその後」 masaru_b_clさんどんどん改善されていくことがすばらしい。 継続していることもすばらしい。 外部に公開していることも本当にすばらしい！ 「インターネットの契約から開通まで」 kam1nchuさんネット引くのって、すげーことなんだなと思った。 こんなことかんがえたことなかったw ひかり電話も使ってあげて欲しいと思ったw]]></summary></entry></feed>